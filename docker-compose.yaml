services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
      - mail
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_EMAIL: ${MAIL_EMAIL}

  forums_app:
    build:
      context: ./forums_backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - neo4j
    environment:
      NEO4J_URI: ${NEO4J_URI}
      NEO4J_USER: ${NEO4J_USER}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/starter.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  neo4j:
    image: neo4j:latest
    restart: always
    ports:
      - "7474:7474" # Web UI
      - "7687:7687" # Bolt protocol
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs

  mail:
    image: mailhog/mailhog
    ports:
      - "${MAIL_PORT}:${MAIL_PORT}" # SMTP
      - "8025:8025" # Web UI

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent overwriting node_modules
    environment:
      - SERVER_URL=${SERVER_URL}
      - API_URL=${API_URL}
    depends_on:
      - app
      - forums_app

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
