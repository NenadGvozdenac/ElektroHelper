name: Docker Compose CI

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      services_started: ${{ steps.start_services.outputs.services_started }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.19.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Start Docker services
        id: start_services
        run: |
          docker-compose -f docker-compose.yaml up -d db db_test
          echo "::set-output name=services_started::true"

  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tester container
        run: |
          docker-compose -f docker-compose.yaml up --build -d tester
          sleep 15
          tester_exit_code=$(docker inspect --format '{{.State.ExitCode}}' elektrohelper-tester-1)
          if [ "$tester_exit_code" -ne 0 ]; then
            echo "Tester service failed with exit code $tester_exit_code"
            exit 1
          else
            echo "Tester service passed successfully"
          fi

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build app image
        run: |
          docker-compose -f docker-compose.yaml up -d --build app

  cleanup:
    runs-on: ubuntu-latest
    needs: [test, build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clean up Docker containers
        run: |
          docker-compose down
